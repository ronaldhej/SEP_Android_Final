package com.github.sep_android_app.adapters;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.github.sep_android_app.R;
import com.github.sep_android_app.data.model.User;

import java.util.List;

public class UserAdapter extends RecyclerView.Adapter<UserAdapter.ViewHolder> {

    List<User> users;
    private onClickListener onClickListener;

    public UserAdapter(List<User> users, onClickListener onClickListener) {
        this.users = users;
        this.onClickListener = onClickListener;
    }

    //Creating item template
    @NonNull
    @Override
    public UserAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        LayoutInflater inflater = LayoutInflater.from(parent.getContext());
        View view = inflater.inflate(R.layout.item_user, parent, false);
        return new ViewHolder(view, onClickListener);
    }

    //Binding data to the items
    @Override
    public void onBindViewHolder(@NonNull UserAdapter.ViewHolder holder, int position) {
        holder.name.setText(users.get(position).getName());

    }

    public int getItemCount() {
        return users.size();
    }

    //Getting instances of the buttons and fields
    class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {

        TextView name;
        ImageView icon;
        Button btn_edit;

        onClickListener onClickListener;

        ViewHolder(View itemView, onClickListener onClickListener) {
            super(itemView);
            name = itemView.findViewById(R.id.tv_name);
            icon = itemView.findViewById(R.id.iv_icon);
            btn_edit = itemView.findViewById(R.id.btn_edit);
            //Adding button listener for each item generated by the adapter
            this.onClickListener = onClickListener;

            btn_edit.setOnClickListener(this);
        }

        //implementation of the onClickListener interface
        @Override
        public void onClick(View itemView) {
            onClickListener.onClick(getAdapterPosition(), itemView);
        }
    }

    public interface onClickListener {
        void onClick(int position, View view);
    }
}
